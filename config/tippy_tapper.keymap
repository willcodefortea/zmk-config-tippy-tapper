/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <32 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  | BSPC |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //        | CTRL | ALT | GUI | SPC  | LWR |   | RSE | BSPC  | GUI |  ALT | CTRL |

            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3        &kp N4            &kp N5         &kp N6       &kp N7                   &kp N8           &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W      &kp E         &kp R             &kp T          &kp Y        &kp U                    &kp I            &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A   &kp S      &kp D         &kp F             &kp G          &kp H        &kp J                    &kp K            &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C         &kp V             &kp B          &kp N        &kp M                    &kp COMMA        &kp DOT  &kp FSLH  &kp ESC
           &trans  &kp LCTRL  &kp LEFT_ALT  &mt LEFT_GUI TAB  &lt 2 SPACE    &lt 3 ENTER  &mt RIGHT_GUI BACKSPACE  &kp RIGHT_SHIFT  &trans   &trans
            >;
        };

        WIN {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        Left {
            bindings = <
&trans  &trans             &trans    &trans           &trans                 &trans         &trans     &trans          &trans     &trans     &trans        &trans
&trans  &kp EXCL           &kp AT    &kp HASH         &kp DLLR               &kp PERCENT    &kp CARET  &kp AMPS        &kp ASTRK  &kp GRAVE  &kp TILDE     &trans
&trans  &kp DOUBLE_QUOTES  &kp LBKT  &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &trans         &kp FSLH   &kp MINUS       &kp EQUAL  &kp COLON  &kp SEMI      &trans
&trans  &kp SINGLE_QUOTE   &kp RBKT  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &trans         &kp BSLH   &kp UNDERSCORE  &kp PLUS   &kp PIPE   &kp QUESTION  &trans
        &trans             &trans    &trans           &trans                 &trans         &trans     &trans          &trans     &trans     &trans
            >;
        };

        Right {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans         &trans        &trans     &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7    &kp N8         &kp N9        &kp N0     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans         &trans        &trans
            >;
        };

        Tri {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_CLR      &bt BT_SEL 0  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &bt BT_SEL 2  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 3    &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans          &trans        &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
